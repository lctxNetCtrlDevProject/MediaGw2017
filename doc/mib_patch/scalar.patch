--- nstAgentModuleObject.c	2017-03-22 14:34:34.000579500 +0800
+++ ../nstAgentModuleObject.c	2017-03-22 14:33:21.803962200 +0800
@@ -1,5 +1,5 @@
 /*
- * Note: this file originally auto-generated by mib2c using
+ * Note: this file originally auto-generated by mib2c using mib2c.scalar.conf
  *        $
  */
 
@@ -8,6 +8,9 @@
 #include <net-snmp/agent/net-snmp-agent-includes.h>
 #include "nstAgentModuleObject.h"
 
+/**private scalar variablies defination**/
+int testVal = 0;
+
 /** Initializes the nstAgentModuleObject module */
 void
 init_nstAgentModuleObject(void)
@@ -39,9 +42,13 @@
     switch(reqinfo->mode) {
 
         case MODE_GET:
+            /*snmpget*/
+            /*You can do your own job to fetch or get the proper val*/
+            /*set integer by ASN_INTEGER with pointer and size()*/
+            /*set string by ASN_OCTET_STR with pointer and strlen()*/
             snmp_set_var_typed_value(requests->requestvb, ASN_INTEGER,
-                                     /* XXX: a pointer to the scalar's data */,
-                                     /* XXX: the length of the data in bytes */);
+                                     /* XXX: a pointer to the scalar's data */&testVal,
+                                     /* XXX: the length of the data in bytes */sizeof(testVal));
             break;
 
         /*
@@ -60,7 +67,7 @@
 
         case MODE_SET_RESERVE2:
             /* XXX malloc "undo" storage buffer */
-            if (/* XXX if malloc, or whatever, failed: */) {
+            if (/* XXX if malloc, or whatever, failed: */0) {
                 netsnmp_set_request_error(reqinfo, requests, SNMP_ERR_RESOURCEUNAVAILABLE);
             }
             break;
@@ -73,14 +80,17 @@
 
         case MODE_SET_ACTION:
             /* XXX: perform the value change here */
-            if (/* XXX: error? */) {
-                netsnmp_set_request_error(reqinfo, requests, /* some error */);
+            /*Get integer value by *(requests->requestvb->val.integer)*/
+            /*Get pointer to a string by requests->requestvb->val.string*/
+            testVal =  *(requests->requestvb->val.integer);
+            if (/* XXX: error? */0) {
+                netsnmp_set_request_error(reqinfo, requests, /* some error */NULL);
             }
             break;
 
         case MODE_SET_COMMIT:
             /* XXX: delete temporary storage */
-            if (/* XXX: error? */) {
+            if (/* XXX: error? */0) {
                 /* try _really_really_ hard to never get to this point */
                 netsnmp_set_request_error(reqinfo, requests, SNMP_ERR_COMMITFAILED);
             }
@@ -88,7 +98,7 @@
 
         case MODE_SET_UNDO:
             /* XXX: UNDO and return to previous value for the object */
-            if (/* XXX: error? */) {
+            if (/* XXX: error? */0) {
                 /* try _really_really_ hard to never get to this point */
                 netsnmp_set_request_error(reqinfo, requests, SNMP_ERR_UNDOFAILED);
             }
